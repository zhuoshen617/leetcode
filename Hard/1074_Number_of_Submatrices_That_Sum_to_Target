// Two Sum problem in 2D

class Solution {
public:
    int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {
        int m = matrix.size(), n = matrix[0].size();
        
        vector<vector<int>> preSum(m+1, vector<int>(n+1, 0));
        
        
        for (int i = 1; i < m+1; i++)
        {
            int sum = 0;
            for (int j = 1; j < n+1; j++)
            {
                sum += matrix[i-1][j-1];
                preSum[i][j] = preSum[i-1][j] + sum;
            }
        }
        
        
        int result = 0;
        for (int r1 = 0; r1 < m+1; r1++)
        {
            for (int r2 = r1 +1; r2 < m+1; r2++)
            {
                unordered_map<int, int> hashmap;
                hashmap[0] = 1;
                for (int j = 1; j < n+1; j++)
                {
                    int sum = preSum[r2][j] - preSum[r1][j];
                    if (hashmap.count(sum-target))
                        result += hashmap[sum-target];
                    
                    hashmap[sum]++;
                }
            }
        }
        
        return result;
     
    }
};